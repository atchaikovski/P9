---
- name: Install Docker container engine
  include_tasks: pkg.yml

- name: Copy Docker engine service file
  register: change_docker
  template:
    src: "docker.service.j2"
    dest: "{{ systemd_dir }}/docker.service"
    owner: root
    group: root
    mode: 0755

- name: Copy Docker environment config file
  template: src=docker.j2 dest={{ system_env_dir }}/docker

- name: Add any insecure registries to Docker config
  when: insecure_registries is defined and insecure_registries | length > 0
  lineinfile: dest={{ system_env_dir }}/docker regexp=^INSECURE_REGISTRY= line=INSECURE_REGISTRY="{% for reg in insecure_registries %}--insecure-registry={{ reg }} {% endfor %}"

- name: Add registry to Docker config
  when: add_registry is defined and add_registry > 0
  lineinfile: dest={{ system_env_dir }}/docker regexp=^ADD_REGISTRY= line=ADD_REGISTRY="{% for reg in add_registry %}--add-registry={{ reg }} {%endfor %}"

- name: Enable and check Docker service
  systemd:
    name: docker
    daemon_reload: yes
    state: started
    enabled: yes
  register: started_docker

- name: add {{ docker_user }} to docker group
  user: 
    name: "{{ docker_user }}"
    groups: docker
    append: yes

- name: copy config file of the app
  template:
    src: "web.conf.j2"
    dest: /home/{{ docker_user }}/web.conf
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: 0644
  
- name: copy app files to docker VM
  copy: 
    src: "{{ item }}"
    dest: /home/{{ docker_user }}/
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: 0644
  with_fileglob:
    - "../../app/*"

- name: build a container
  shell: "docker build -t app ."

- name: run a container
  shell: "docker run -d -p 8080:80 --rm --name webapp app"